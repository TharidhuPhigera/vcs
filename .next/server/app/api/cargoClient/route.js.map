{"version":3,"file":"../app/api/cargoClient/route.js","mappings":"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","sources":["webpack://vcs/./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://vcs/external commonjs \"bcrypt\"","webpack://vcs/external commonjs \"import-in-the-middle\"","webpack://vcs/external commonjs \"mongoose\"","webpack://vcs/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://vcs/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://vcs/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://vcs/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://vcs/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://vcs/external commonjs \"require-in-the-middle\"","webpack://vcs/external commonjs2 \"async_hooks\"","webpack://vcs/external commonjs2 \"child_process\"","webpack://vcs/external commonjs2 \"crypto\"","webpack://vcs/external commonjs2 \"diagnostics_channel\"","webpack://vcs/external commonjs2 \"events\"","webpack://vcs/external commonjs2 \"fs\"","webpack://vcs/external commonjs2 \"module\"","webpack://vcs/external commonjs2 \"os\"","webpack://vcs/external commonjs2 \"path\"","webpack://vcs/external commonjs2 \"perf_hooks\"","webpack://vcs/external commonjs2 \"process\"","webpack://vcs/external commonjs2 \"tty\"","webpack://vcs/external commonjs2 \"url\"","webpack://vcs/external commonjs2 \"util\"","webpack://vcs/external commonjs2 \"worker_threads\"","webpack://vcs/external node-commonjs \"node:child_process\"","webpack://vcs/external node-commonjs \"node:diagnostics_channel\"","webpack://vcs/external node-commonjs \"node:fs\"","webpack://vcs/external node-commonjs \"node:http\"","webpack://vcs/external node-commonjs \"node:https\"","webpack://vcs/external node-commonjs \"node:inspector\"","webpack://vcs/external node-commonjs \"node:net\"","webpack://vcs/external node-commonjs \"node:os\"","webpack://vcs/external node-commonjs \"node:path\"","webpack://vcs/external node-commonjs \"node:readline\"","webpack://vcs/external node-commonjs \"node:stream\"","webpack://vcs/external node-commonjs \"node:tls\"","webpack://vcs/external node-commonjs \"node:util\"","webpack://vcs/external node-commonjs \"node:worker_threads\"","webpack://vcs/external node-commonjs \"node:zlib\"","webpack://vcs/app/api/cargoClient/route.js","webpack://vcs/sentry-wrapper-module","webpack://vcs/?1e23","webpack://vcs/./app/models/Cargo.js"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 44725;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"bcrypt\");","module.exports = require(\"import-in-the-middle\");","module.exports = require(\"mongoose\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"require-in-the-middle\");","module.exports = require(\"async_hooks\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"module\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"process\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"worker_threads\");","module.exports = require(\"node:child_process\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:http\");","module.exports = require(\"node:https\");","module.exports = require(\"node:inspector\");","module.exports = require(\"node:net\");","module.exports = require(\"node:os\");","module.exports = require(\"node:path\");","module.exports = require(\"node:readline\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:util\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:zlib\");","import { NextResponse } from 'next/server';\nimport mongoose from 'mongoose';\nimport Cargo from '@/app/models/Cargo';\n\n// Connect to MongoDB\nasync function connectToDatabase() {\n  if (mongoose.connections[0].readyState) {\n    return;\n  }\n  await mongoose.connect(process.env.MONGO_URI);\n}\n\nexport async function GET(req) {\n  await connectToDatabase();\n\n  try {\n    const referenceNumber = req.nextUrl.searchParams.get('referenceNumber'); // Get the reference number from the query\n    if (!referenceNumber) {\n      return NextResponse.json({ message: \"Reference number is required\" }, { status: 400 });\n    }\n\n    const cargo = await Cargo.findOne({ referenceNumber }); // Find the cargo by referenceNumber\n    if (!cargo) {\n      return NextResponse.json({ message: \"Cargo not found\" }, { status: 404 });\n    }\n\n    return NextResponse.json(cargo); // Return the found cargo as JSON\n  } catch (error) {\n    console.error(\"Error fetching cargo:\", error);\n    return NextResponse.json({ message: \"Error fetching cargo\" }, { status: 500 });\n  }\n}\n\nexport async function POST(req) {\n  await connectToDatabase();\n\n  try {\n    const data = await req.json(); // Parse JSON body of the request\n    const { referenceNumber, status, origin, destination, estimatedDelivery, unitCount, payment, note, imageUrl, password } = data;\n    \n    // Convert the estimatedDelivery field to a Date object if it's a string\n    const deliveryDate = new Date(estimatedDelivery);\n    \n    const newCargo = new Cargo({\n      referenceNumber,\n      status,\n      origin,\n      destination,\n      estimatedDelivery: deliveryDate, // Store as Date in MongoDB\n      unitCount,\n      payment,\n      note,\n      imageUrl,\n      password,\n    });\n\n    await newCargo.save(); // Save the new cargo document to the database\n    return NextResponse.json(newCargo, { status: 201 }); // Return the created cargo\n  } catch (error) {\n    console.error(\"Error adding cargo:\", error);\n    return NextResponse.json({ message: \"Error adding cargo\" }, { status: 500 });\n  }\n}","import * as Sentry from '@sentry/nextjs';\nimport * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/cargoClient',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/tharidhu/vcs/app/api/cargoClient/route.js\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/cargoClient/route\",\n        pathname: \"/api/cargoClient\",\n        filename: \"route\",\n        bundlePath: \"app/api/cargoClient/route\"\n    },\n    resolvedPagePath: \"/Users/tharidhu/vcs/app/api/cargoClient/route.js\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\n\n// Define the schema\nconst CargoSchema = new mongoose.Schema({\n  referenceNumber: { type: String, required: true, unique: true },\n  status: { type: String, required: false },\n  origin: { type: String, required: true },\n  destination: { type: String, required: true },\n  estimatedDelivery: { type: Date, required: false },\n  unitCount: { type: Number, required: true, min: 1 },\n  payment: { type: Number, required: true },\n  password: { type: String, required: true },\n  note: { type: String, required: false },\n  imageUrl: { type: String },\n});\n\n// Pre-save middleware to hash the password\nCargoSchema.pre('save', async function (next) {\n  if (this.isModified('password')) {\n    const salt = await bcrypt.genSalt(10);\n    this.password = await bcrypt.hash(this.password, salt);\n  }\n  next();\n});\n\n// Create the model if it doesn't already exist\nconst Cargo = mongoose.models.Cargo || mongoose.model('Cargo', CargoSchema);\n\n// Export the model\nexport default Cargo;"],"names":["connectToDatabase","mongoose","readyState","process","env","MONGO_URI","GET","req","referenceNumber","nextUrl","searchParams","get","NextResponse","json","message","status","cargo","Cargo","findOne","error","console","POST","origin","destination","estimatedDelivery","unitCount","payment","note","imageUrl","password","data","deliveryDate","Date","newCargo","save","asyncStorageModule","requestAsyncStorage","wrapHandler","serverComponentModule.GET","serverComponentModule.POST","PUT","serverComponentModule.PUT","serverComponentModule.PATCH","DELETE","serverComponentModule.DELETE","HEAD","serverComponentModule.HEAD","OPTIONS","serverComponentModule.OPTIONS","CargoSchema","type","String","required","unique","Number","min","pre","next","isModified","salt","bcrypt"],"sourceRoot":""}