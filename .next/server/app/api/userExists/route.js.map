{"version":3,"file":"../app/api/userExists/route.js","mappings":"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","sources":["webpack://vcs/./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://vcs/external commonjs \"import-in-the-middle\"","webpack://vcs/external commonjs \"mongoose\"","webpack://vcs/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://vcs/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://vcs/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://vcs/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://vcs/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://vcs/external commonjs \"require-in-the-middle\"","webpack://vcs/external commonjs2 \"async_hooks\"","webpack://vcs/external commonjs2 \"child_process\"","webpack://vcs/external commonjs2 \"crypto\"","webpack://vcs/external commonjs2 \"diagnostics_channel\"","webpack://vcs/external commonjs2 \"events\"","webpack://vcs/external commonjs2 \"fs\"","webpack://vcs/external commonjs2 \"module\"","webpack://vcs/external commonjs2 \"os\"","webpack://vcs/external commonjs2 \"path\"","webpack://vcs/external commonjs2 \"perf_hooks\"","webpack://vcs/external commonjs2 \"process\"","webpack://vcs/external commonjs2 \"tty\"","webpack://vcs/external commonjs2 \"url\"","webpack://vcs/external commonjs2 \"util\"","webpack://vcs/external commonjs2 \"worker_threads\"","webpack://vcs/external node-commonjs \"node:child_process\"","webpack://vcs/external node-commonjs \"node:diagnostics_channel\"","webpack://vcs/external node-commonjs \"node:fs\"","webpack://vcs/external node-commonjs \"node:http\"","webpack://vcs/external node-commonjs \"node:https\"","webpack://vcs/external node-commonjs \"node:inspector\"","webpack://vcs/external node-commonjs \"node:net\"","webpack://vcs/external node-commonjs \"node:os\"","webpack://vcs/external node-commonjs \"node:path\"","webpack://vcs/external node-commonjs \"node:readline\"","webpack://vcs/external node-commonjs \"node:stream\"","webpack://vcs/external node-commonjs \"node:tls\"","webpack://vcs/external node-commonjs \"node:util\"","webpack://vcs/external node-commonjs \"node:worker_threads\"","webpack://vcs/external node-commonjs \"node:zlib\"","webpack://vcs/app/api/userExists/route.js","webpack://vcs/sentry-wrapper-module","webpack://vcs/?f8f4","webpack://vcs/./app/models/User.js","webpack://vcs/./utils/db.js"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 44725;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"import-in-the-middle\");","module.exports = require(\"mongoose\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"require-in-the-middle\");","module.exports = require(\"async_hooks\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"module\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"process\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"worker_threads\");","module.exports = require(\"node:child_process\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:http\");","module.exports = require(\"node:https\");","module.exports = require(\"node:inspector\");","module.exports = require(\"node:net\");","module.exports = require(\"node:os\");","module.exports = require(\"node:path\");","module.exports = require(\"node:readline\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:util\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:zlib\");","import { connect } from \"@/utils/db\";\nimport User from \"@/app/models/User\";\nimport { NextResponse } from \"next/server\";\n\nexport async function POST(req) {\n  try {\n    const { username } = await req.json();\n    console.log(\"Received username:\", username);  // Log username\n\n    // Connect to the database\n    await connect();\n\n    // Check if user exists in the database\n    const user = await User.findOne({ username }).select(\"_id\");\n\n    // If user exists, return true, otherwise false\n    if (user) {\n      console.log(\"User found:\", user);\n      return NextResponse.json({ userExists: true });\n    } else {\n      console.log(\"No user found with the username:\", username);\n      return NextResponse.json({ userExists: false });\n    }\n  } catch (error) {\n    console.error(\"Error during user existence check:\", error);\n    return NextResponse.json({ error: error.message || \"An error occurred\" }, { status: 500 });\n  }\n}","import * as Sentry from '@sentry/nextjs';\nimport * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/userExists',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/tharidhu/vcs/app/api/userExists/route.js\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/userExists/route\",\n        pathname: \"/api/userExists\",\n        filename: \"route\",\n        bundlePath: \"app/api/userExists/route\"\n    },\n    resolvedPagePath: \"/Users/tharidhu/vcs/app/api/userExists/route.js\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import mongoose from \"mongoose\";\nimport bcrypt from \"bcryptjs\";\n\nconst UserSchema = new mongoose.Schema({\n  username: { type: String, required: true, unique: true },\n  password: { type: String, required: true },\n  role: { type: String, required: true },\n});\n\n// Method to compare password hashes\nUserSchema.methods.comparePassword = async function (password) {\n  return bcrypt.compare(password, this.password);\n};\n\nconst User = mongoose.models.User || mongoose.model(\"User\", UserSchema);\n\nexport default User;","import mongoose from 'mongoose';\n\nexport async function connect() {\n  if (mongoose.connections[0].readyState) {\n    return; // Already connected\n  }\n\n  try {\n    await mongoose.connect(process.env.MONGO_URI); // No need for deprecated options\n    console.log('Database connected');\n  } catch (error) {\n    console.error('Database connection failed', error);\n    throw new Error('Database connection failed');\n  }\n}"],"names":["POST","req","username","json","console","log","connect","user","User","findOne","select","NextResponse","userExists","error","message","status","asyncStorageModule","requestAsyncStorage","wrapHandler","GET","serverComponentModule.GET","serverComponentModule.POST","PUT","serverComponentModule.PUT","PATCH","serverComponentModule.PATCH","DELETE","serverComponentModule.DELETE","HEAD","serverComponentModule.HEAD","OPTIONS","serverComponentModule.OPTIONS","UserSchema","mongoose","type","String","required","unique","password","role","methods","comparePassword","bcrypt","readyState","process","env","MONGO_URI"],"sourceRoot":""}