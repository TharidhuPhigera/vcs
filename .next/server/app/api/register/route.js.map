{"version":3,"file":"../app/api/register/route.js","mappings":"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","sources":["webpack://vcs/./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://vcs/external commonjs \"import-in-the-middle\"","webpack://vcs/external commonjs \"mongoose\"","webpack://vcs/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://vcs/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://vcs/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://vcs/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://vcs/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://vcs/external commonjs \"require-in-the-middle\"","webpack://vcs/external commonjs2 \"async_hooks\"","webpack://vcs/external commonjs2 \"child_process\"","webpack://vcs/external commonjs2 \"crypto\"","webpack://vcs/external commonjs2 \"diagnostics_channel\"","webpack://vcs/external commonjs2 \"events\"","webpack://vcs/external commonjs2 \"fs\"","webpack://vcs/external commonjs2 \"module\"","webpack://vcs/external commonjs2 \"os\"","webpack://vcs/external commonjs2 \"path\"","webpack://vcs/external commonjs2 \"perf_hooks\"","webpack://vcs/external commonjs2 \"process\"","webpack://vcs/external commonjs2 \"tty\"","webpack://vcs/external commonjs2 \"url\"","webpack://vcs/external commonjs2 \"util\"","webpack://vcs/external commonjs2 \"worker_threads\"","webpack://vcs/external node-commonjs \"node:child_process\"","webpack://vcs/external node-commonjs \"node:diagnostics_channel\"","webpack://vcs/external node-commonjs \"node:fs\"","webpack://vcs/external node-commonjs \"node:http\"","webpack://vcs/external node-commonjs \"node:https\"","webpack://vcs/external node-commonjs \"node:inspector\"","webpack://vcs/external node-commonjs \"node:net\"","webpack://vcs/external node-commonjs \"node:os\"","webpack://vcs/external node-commonjs \"node:path\"","webpack://vcs/external node-commonjs \"node:readline\"","webpack://vcs/external node-commonjs \"node:stream\"","webpack://vcs/external node-commonjs \"node:tls\"","webpack://vcs/external node-commonjs \"node:util\"","webpack://vcs/external node-commonjs \"node:worker_threads\"","webpack://vcs/external node-commonjs \"node:zlib\"","webpack://vcs/app/api/register/route.js","webpack://vcs/sentry-wrapper-module","webpack://vcs/?e11d","webpack://vcs/","webpack://vcs/?9327","webpack://vcs/./app/models/User.js","webpack://vcs/./utils/db.js"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 44725;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"import-in-the-middle\");","module.exports = require(\"mongoose\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"require-in-the-middle\");","module.exports = require(\"async_hooks\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"module\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"process\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"worker_threads\");","module.exports = require(\"node:child_process\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:http\");","module.exports = require(\"node:https\");","module.exports = require(\"node:inspector\");","module.exports = require(\"node:net\");","module.exports = require(\"node:os\");","module.exports = require(\"node:path\");","module.exports = require(\"node:readline\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:util\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:zlib\");","import { connect } from \"@/utils/db\";\nimport User from \"@/app/models/User\";\nimport bcrypt from \"bcryptjs\";\nimport { NextResponse } from \"next/server\";\n\nexport async function POST(req) {\n  try {\n    const { username, password, role } = await req.json();\n\n    // Validate role\n    if (role !== \"admin\" && role !== \"employee\") {\n      return NextResponse.json(\n        { message: \"Invalid role. Must be either 'admin' or 'employee'.\" },\n        { status: 400 }\n      );\n    }\n\n    // Check if user already exists by username\n    const resUserExists = await fetch(\"http://localhost:3000/api/userExists\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ username })\n      });\n\n    const userExistsData = await resUserExists.json();\n\n    if (userExistsData.userExists) {\n      return NextResponse.json(\n        { message: \"User already exists.\" },\n        { status: 400 }\n      );\n    }\n\n    // Hash the password for security\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    // Connect to the database\n    await connect();\n\n    // Create a new user document\n    await User.create({\n      username,\n      password: hashedPassword,\n      role,\n    });\n\n    // Initialize session if it doesn't exist\n    if (!req.session) {\n      req.session = {};\n    }\n\n    // Store user information in the session\n    req.session.user = { username, role };\n    console.log('User session:', req.session.user);\n\n    // Respond with success message\n    return NextResponse.json({ message: \"User registered.\" }, { status: 201 });\n  } catch (error) {\n    // Log the error and return a failure response\n    console.error('Error during registration:', error);\n    return NextResponse.json(\n      { message: \"An error occurred while registering the user.\" },\n      { status: 500 }\n    );\n  }\n}","import * as Sentry from '@sentry/nextjs';\nimport * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/register',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/tharidhu/vcs/app/api/register/route.js\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/register/route\",\n        pathname: \"/api/register\",\n        filename: \"route\",\n        bundlePath: \"app/api/register/route\"\n    },\n    resolvedPagePath: \"/Users/tharidhu/vcs/app/api/register/route.js\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map",null,null,"import mongoose from \"mongoose\";\nimport bcrypt from \"bcryptjs\";\n\nconst UserSchema = new mongoose.Schema({\n  username: { type: String, required: true, unique: true },\n  password: { type: String, required: true },\n  role: { type: String, required: true },\n});\n\n// Method to compare password hashes\nUserSchema.methods.comparePassword = async function (password) {\n  return bcrypt.compare(password, this.password);\n};\n\nconst User = mongoose.models.User || mongoose.model(\"User\", UserSchema);\n\nexport default User;","import mongoose from 'mongoose';\n\nexport async function connect() {\n  if (mongoose.connections[0].readyState) {\n    return; // Already connected\n  }\n\n  try {\n    await mongoose.connect(process.env.MONGO_URI); // No need for deprecated options\n    console.log('Database connected');\n  } catch (error) {\n    console.error('Database connection failed', error);\n    throw new Error('Database connection failed');\n  }\n}"],"names":["POST","req","username","password","role","json","NextResponse","message","status","resUserExists","fetch","method","headers","body","JSON","stringify","userExistsData","userExists","hashedPassword","bcrypt","connect","User","create","session","user","console","log","error","asyncStorageModule","requestAsyncStorage","wrapHandler","GET","serverComponentModule.GET","serverComponentModule.POST","PUT","serverComponentModule.PUT","serverComponentModule.PATCH","DELETE","serverComponentModule.DELETE","HEAD","serverComponentModule.HEAD","OPTIONS","serverComponentModule.OPTIONS","UserSchema","mongoose","type","String","required","unique","methods","comparePassword","readyState","process","env","MONGO_URI"],"sourceRoot":""}